name: NON-PROD Deployment
run-name: NON-PROD Deployment
on:
  push:
    branches:
      - "main"
jobs:
  run-quality-checks:
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Setup
        id: setup
        run: |
          npm i -g zx
          zx ./scripts/setup.mjs
        env:
          ENV: DEV
          NAMESPACE: ''
      - name: Configure AWS Credentials for deployment
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{vars.AWS_REGION}}
      - name: Lint
        run: npm run lint
      - name: Unit tests
        if: ${{ vars.RUN_UNIT_TESTS }}
        run: npm run test:unit:coverage
  deploy-to-DEV:
    needs: run-quality-checks
    runs-on: ubuntu-latest
    environment: DEV
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Setup
        id: setup
        run: |
          npm i -g zx
          zx ./scripts/setup.mjs
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{vars.AWS_REGION}}
      - name: Build
        run: zx ./scripts/build.mjs
        env:
          ENV: DEV
      - name: Deploy
        id: deploy
        run: zx ./scripts/deploy.mjs
        env:
          ENV: DEV
          NAMESPACE: ''
      - name: Integration tests
        if: ${{ vars.RUN_INTEGRATION_TESTS }}
        run: npm run test:integration
        env:
          ENV: DEV
          NAMESPACE: ''
      - name: Integration Test Coverage
        if: ${{ vars.RUN_INTEGRATION_TESTS }}
        run: npm run test:integration:coverage
        env:
          ENV: DEV
          NAMESPACE: ''
      - name: Remove .npmrc
        if: always()
        run: rm -f ~/.npmrc
  deploy-to-SQA:
    needs: run-quality-checks
    runs-on: ubuntu-latest
    environment: SQA
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Setup
        id: setup
        run: |
          npm i -g zx
          zx ./scripts/setup.mjs
      - name: Configure AWS Credentials for deployment
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{vars.AWS_REGION}}
      - name: Build
        run: zx ./scripts/build.mjs
        env:
          ENV: SQA
      - name: Deploy
        id: deploy
        run: zx ./scripts/deploy.mjs
        env:
          ENV: SQA
          NAMESPACE: ''
      - name: Integration tests
        if: ${{ vars.RUN_INTEGRATION_TESTS }}
        run: npm run test:integration
        env:
          ENV: SQA
          NAMESPACE: ''
      - name: Integration Test Coverage
        if: ${{ vars.RUN_INTEGRATION_TESTS }}
        run: npm run test:integration:coverage
        env:
          ENV: SQA
          NAMESPACE: ''
      - name: Remove .npmrc
        if: always()
        run: rm -f ~/.npmrc
  deploy-to-UAT:
    needs: run-quality-checks
    runs-on: ubuntu-latest
    environment: UAT
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Setup
        id: setup
        run: |
          npm i -g zx
          zx ./scripts/setup.mjs
      - name: Configure AWS Credentials for deployment
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{vars.AWS_REGION}}
      - name: Build
        run: zx ./scripts/build.mjs
        env:
          ENV: UAT
      - name: Deploy
        id: deploy
        run: zx ./scripts/deploy.mjs
        env:
          ENV: UAT
          NAMESPACE: ''
      - name: Integration tests
        if: ${{ vars.RUN_INTEGRATION_TESTS }}
        run: npm run test:integration
        env:
          ENV: UAT
          NAMESPACE: ''
      - name: Integration Test Coverage
        if: ${{ vars.RUN_INTEGRATION_TESTS }}
        run: npm run test:integration:coverage
        env:
          ENV: UAT
          NAMESPACE: ''
      - name: Remove .npmrc
        if: always()
        run: rm -f ~/.npmrc
